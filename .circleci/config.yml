version: 2.1

# @param trigger-message: A summary message of what triggered the pipeline to run
# set when triggering pipelines in flipDevTools::TriggerRevDepPipelines() step
# @param remote-deps: A comma-separated string of GitHub refs, which can
# be used to install specific branches of dependencies; used by both
# flipDevTools::InstallDeps() and TriggerRevDepPipelines;
# e.g. "Displayr/flipU@DS-4300,cran/survey@4.0"
# @param plugins-branch String specifying a branch of the Displayr/Plugins
# repo to trigger a build in (if the workflow is a success), the default "" does not
# trigger a build in Plugins
# @param triggered-packages: A comma-separated string of reverse depenendency
# packages which have already been triggered, i.e. should be excluded (not triggered)
# by TriggerRevDepPipelines() in the Trigger reverse dependencies step; it is updated
# automatically by that function to ensure each package is triggered at most once.
parameters:
    trigger-message:
        type: string
        default: ""
    remote-deps:
        type: string
        default: ""
    plugins-branch:
        type: string
        default: ""
    triggered-packages:
        type: string
        default: ""

orbs:
  r-packages-orb:
    executors:
      default:
        machine:
            image: ubuntu-2204:current
        resource_class: small
    commands:
      install_apt_packages:
        description: "Download apt dependencies"
        steps:
          run:
            command: |
              sudo mv /etc/apt/sources.list.d /etc/apt/sources.list.d.save
              sudo mkdir /etc/apt/sources.list.d
              sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
              wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | \
              sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
              sudo add-apt-repository -y "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
              sudo add-apt-repository -y ppa:c2d4u.team/c2d4u4.0+
              # Make the cache dir if it doesn't exist
              if ! [[ -d ../vendor/apt ]]; then
                mkdir -p ../vendor/apt
              fi
              # Install R if it doesn't exist
              if ! [ -x "$(command -v R)" ]; then
                if ! [[ -d ../vendor/apt/archives ]]; then
                  sudo apt-get update && sudo apt-get install --download-only -y ccache pandoc \
                  libgit2-dev libharfbuzz-dev libfribidi-dev libprotoc-dev libprotobuf-dev \
                  libv8-dev librsvg2-dev libmpfr-dev libnlopt-dev libgdal-dev libproj-dev \
                  r-base r-cran-devtools software-properties-common dirmngr
                  sudo cp -R /var/cache/apt ../vendor/
                  # Making sure our user has ownership, in order to cache
                  sudo chown -R ubuntu:ubuntu ../vendor/apt
                fi
              fi
      install_deps:
        description: "Install R dependencies"
        parameters:
          remote-deps:
              description: |
                A comma-separated string of GitHub refs, which can
                be used to install specific branches of dependencies; used by both
                flipDevTools::InstallDeps() and TriggerRevDepPipelines;
                e.g. "Displayr/flipU@DS-4300,cran/survey@4.0"
              type: string
        steps:
          run:
            command: |
              # Install all packages in the cache; https://askubuntu.com/a/1454102
              if ! [ -x "$(command -v R)" ]; then
                sudo rm /var/cache/debconf/config.dat
                sudo dpkg -i ../vendor/apt/archives/*.deb
              fi
              sudo bash -c 'cd /usr/local/bin; curl -L https://aka.ms/downloadazcopy-v10-linux | \
              tar --strip-components=1 --exclude=*.txt -xzvf -; chmod +x azcopy'
              R -q -e 'if (!dir.exists("~/R/library")) dir.create("~/R/library", recursive = TRUE)'
              echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
              export R_HOME=`R RHOME`
              echo -e ".libPaths(c('$HOME/R/library', '/usr/lib/R/site-library', '/usr/lib/R/library'))" | \
              sudo tee -a $R_HOME/etc/Rprofile.site
              R -q -e 'remotes::install_github("Displayr/flipDevTools", upgrade = "never")'
              R -q -e 'options(warn = 2); flipDevTools::InstallDeps( \
              remote.refs = <<paramters.remote-deps>>, dependencies = TRUE)'

      build_package:
        description: "Build source and binary package"
        steps:
          - run:
            command: |
              R CMD build --no-build-vignettes .
              R CMD INSTALL --build .
              mkdir built && cp *.tar.gz built/
          - persist_to_workspace:
              root: .
              paths:
                - built/

      check_package:
        description: "Check R package"
        steps:
          - run:
              command: >-
                R -q -e 'rcmdcheck::rcmdcheck(ifelse(dir.exists("built")
                list.files("built", full.names = TRUE)[1], "."),
                args = c("--no-manual", "--ignore-vignettes", "--no-tests"),
                build_args = c("--no-build-vignettes", "--no-manual"),
                error_on = "warning")'

      test_package:
        description: "Run package unit tests"
        steps:
          - run:
              name: "Run unit tests"
              no_output_timeout: 80m
              command: R -e 'q(status = flipDevTools::RunTestsOnCircleCI(), save = "no")'
          - store_test_results:
              path: testthat.xml
          - store_artifacts:
              path: testthat.xml

      trigger_reverse_dependencies:
        description: "Trigger pipelines of R package reverse dependencies"
        parameters:
          remote-deps:
              description: |
                A comma-separated string of GitHub refs, which can
                be used to install specific branches of dependencies; used by both
                flipDevTools::InstallDeps() and TriggerRevDepPipelines;
                e.g. "Displayr/flipU@DS-4300,cran/survey@4.0"
              type: string
          plugins-branch:
              description: |
                String specifying a branch of the Displayr/Plugins
                repo to trigger a build in (if the workflow is a success), the default "" does not
                trigger a build in Plugins
              type: string
          triggered-packages:
              description: |
                A comma-separated string of reverse depenendency
                packages which have already been triggered, i.e. should be excluded (not triggered)
                by TriggerRevDepPipelines() in the Trigger reverse dependencies step; it is updated
                automatically by that function to ensure each package is triggered at most once.
              type: string
        steps:
          - run:
              command: R -e 'flipDevTools::TriggerRevDepPipelines( \
              plugins.branch = << parameters.plugins-branch >>, \
              remote.deps.substitutions = << parameters.remote-deps >>,
              exclude.pkgs = << parameters.triggered-packages >>)'

    jobs:
      build-and-check-package:
        executor: default
        parameters:
          remote-deps:
              description: |
                A comma-separated string of GitHub refs, which can
                be used to install specific branches of dependencies; used by both
                flipDevTools::InstallDeps() and TriggerRevDepPipelines;
                e.g. "Displayr/flipU@DS-4300,cran/survey@4.0"
              default: REMOTE_DEPS
              type: env_var_name
          plugins-branch:
              description: |
                String specifying a branch of the Displayr/Plugins
                repo to trigger a build in (if the workflow is a success), the default "" does not
                trigger a build in Plugins
              default: PLUGINS_BRANCH
              type: env_var_name
          triggered-packages:
              description: |
                A comma-separated string of reverse depenendency
                packages which have already been triggered, i.e. should be excluded (not triggered)
                by TriggerRevDepPipelines() in the Trigger reverse dependencies step; it is updated
                automatically by that function to ensure each package is triggered at most once.
              default: TRIGGERED_PACKAGES
              type: env_var_name
          trigger-message:
              description: |
                A summary message of what triggered the pipeline to run
                set when triggering pipelines in TriggerRevDepPipelines()
              default: TRIGGER_MESSAGE
              type: env_var_name
        steps:
          - when:
              condition: <<parameters.trigger-message>>
              steps:
                - run: echo "<<parameters.trigger-message>>"
          # Clear cache if "<CLEAR_CACHE>" is present in commit message
          # are not picked up by the cache, therefore this workaround is needed.
          # https://discuss.circleci.com/t/cannot-use-circle-yml-environment-variables-in-cache-keys/10994/7
          - checkout
          - run: echo "v0" > ./tmp/cache_vers  # Increment this to invalidate cache
          - restore_cache:
            key: R-package-library-{{ checksum "./tmp/cache_vers" }}
          - run:
            name: Setup cache
              command: |
                if ! [[ -d tmp ]]; then
                  mkdir tmp
                fi
                echo "^tmp" >> .Rbuildignore
                echo "$(which R | grep -Fvce '/usr/bin/R')" &&
                echo "$(R -q -e 'cat(format(getRversion()))')" > ./tmp/R_version
                echo "v0" > ./tmp/cache_vers  # Increment this to invalidate cache
                git log --format=%B -n 1 $CIRCLE_SHA1 | \
                grep -Fe '<CLEAR_CACHE>' > ./tmp/cache_vers  
          # https://discuss.circleci.com/t/caching-apt-get-packages/9076
          - install_apt_packages
          # - update_apt_packages
          - echo "$(R -q -e 'cat(format(getRversion()))')" > ./tmp/R_version
          - restore_cache:
              key: R-package-library-{{ checksum "./tmp/cache_vers" }}-{{ checksum "./tmp/R_version" }}            - install_deps
              REMOTE_DEPS: <<parameters.remote-deps>>
          - save_cache:
              key: R-package-library-{{ checksum "./tmp/cache_vers" }}-{{ checksum "./tmp/R_version" }}
              paths:
                - ../R/library
                - ../vendor/apt

          - build_package
          - check_package
          - test_package
          - trigger_reverse_dependencies:
              REMOTE_DEPS: <<parameters.remote-deps>>
              PLUGINS_BRANCH: <<parameters.plugins-branch>>
              TRIGGER_MESSAGE: <<parameters.trigger-message>>
              TRIGGERED_PACKAGES: <<parameters.triggered-packages>>

      deploy-package:
        executor: default

        steps:
          - checkout
          - attach_workspace:
              at: .
          - restore_cache:
              key: R-package-library-{{ checksum "./tmp/cache_vers" }}-{{ checksum "./tmp/R_version" }}
          - run:
              name: "Set environment variables"
              command: |
                sudo rm /var/cache/debconf/config.dat
                sudo dpkg -i ../vendor/apt/archives/*.deb
                sudo bash -c 'cd /usr/local/bin; curl -L https://aka.ms/downloadazcopy-v10-linux | \
                tar --strip-components=1 --exclude=*.txt -xzvf -; chmod +x azcopy'
                echo -e ".libPaths(c('$HOME/R/library', '/usr/lib/R/site-library', '/usr/lib/R/library'))" | \
                sudo tee -a `R RHOME`/etc/Rprofile.site

          - run:
              name: "Deploy package to drat Repository (Azure container)"
              command: R -q -e 'flipDevTools::DeployPackage()'

workflows:
  build-and-check-R-package:
    jobs:
      - r-packages-orb/build-and-check-package:
          context:
            - r_packages
          parameters:
              remote-deps: <<pipeline.parameters.remote-deps>>
              plugins-branch: <<pipeline.parameters.plugins-branch>>
              trigger-message: <<pipeline.parameters.trigger-message>>
              triggered-packages: <<pipeline.parameters.triggered-packages>>
      - r-packages-orb/deploy-package:
          requires:
            - build-and-check-package
          context:
            - r_packages
          filters:
            branches:
              only:
                - master
